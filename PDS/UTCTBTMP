/* Rexx */
/**********************************************************************/
/* Function:                                                          */
/*                                                                    */
/*  Form a table from a list of variables, display the values of      */
/*  the variables, update the list and put the values back to the     */
/*  shared pool                                                       */
/*                                                                    */
/* Author:                                                            */
/**********************************************************************/
/* ChangeControl-Start                                                */
/* ChangeControl-End                                                  */
                             /* Debug on?                             */
  arg argstr
  if pos("DEBUG",argstr) \= 0
  then trace all
  else
  do
     a = msg("OFF")
     a = prompt("OFF")
  end
                             /* establish default environment         */
  address "ISPEXEC"
  sysenv = sysvar("SYSENV")
                             /* error handling                        */
  "CONTROL ERRORS RETURN"
  Zerrlm = ""
  rc = 0
  AcceptCC = 8
  call on error name Error
  call on failure name Error
 /********************************************************************/

  false  = a\=a
  true   = a=a
  tnames = false
  nLines = 1
  desc  = ""
  arg action . 1  "NAMETB("  nametb  ")" ,
               1  "DATASET(" namelib ")" ,
               1  "NAMEDD("  namedd  ")" ,
               1  "PANEL("   panel   ")" ,
               1  "THISDD("  homedd  ")" ,
               1  "THISDA("  homeda  ")" ,
               .
                             /*  Are we to use specified libraries    */
                             /*  for names or the current library?    */
  if namelib = "" then namelib = homeda
  if namedd  = "" then namedd  = homedd
  if nametb  = "" then nametb = "UTTNAMES"
                             /*  Use dataset name or DDname?          */
  if namelib \= "" then
  do
     if sysdsn("'"namelib"'") = "OK" then
     do
        "LIBDEF NAMEST DATASET ID('"namelib"')"
        "TBOPEN" nametb "LIBRARY(NAMEST) NOWRITE"
        if rc = 0 then Tnames = true
     end
  end
  else if namedd Â¬= "" then
  do
      "TBOPEN" nametb "LIBRARY("namedd") NOWRITE"
      if rc = 0 then Tnames = true
  end
                             /*  panel specified?  (optional)         */
  if panel = ""
  then panel = "UTPTBTMP"
                             /*  select browse or edit display        */
  if action = "UPDATE" then
  do
     color  = "GREEN"
     attr   = "INPUT"
  end
  else
  do
     attr  = "OUTPUT"
     color = "BLUE"
  end
                             /*  retrieve external values             */
  "VGET (KCOUNT KEY1 KEY2 &KEY1 &KEY2"   ,
        "NAMES  &NAMES EXTNAMES &EXTNAMES) SHARED"
  slog = log
                             /*  get key value(s) for display         */
  key1val = value(key1)
  if kcount = 1
  then key2val = "None"
  else key2val = value(key2)
                             /*  create temporary table for variables */
  table   = "UTTTMP77"
  "TBCREATE &TABLE NOWRITE NAMES(NAME LOCN VALUE DESC) REPLACE"
                             /*  extract each variable and its value  */
  fullnames = names extnames
  J = words(names)
  locn = "N"
  do i = 1 to words(fullnames)
     name  = word(fullnames,i)
     value = value(name)
     desc  = ""
     if i>j then locn = "X"
     if Tnames then "TBGET" nametb
     "TBADD &TABLE"
  end
  "TBSORT  &TABLE FIELDS(NAME,C,A)"
                             /*  display the temporary table          */
  log = slog
  tblrow     = 0
  "TBTOP   &TABLE"
  "TBDISPL &TABLE  PANEL(&PANEL) CSRROW("tblrow")"
  subTbRc = rc
  do while subTbRc < 8 | ztdsels > 0

                             /*  cancel without update                */
     if zcmd = "CAN" then
     do
        call stdmsg "Update cancelled, no changes made",   ,
                    "Cancelled"
        signal qquit
     end

     crp = ztdtop
                             /*  locate line                          */
     if zcmd = "LOCATE" then
     do
                             /* set name value                        */
        name = opt1"*"
                             /* ...scan for it                        */
        "TBTOP &TABLE"
        "TBSCAN &TABLE ARGLIST(NAME)"  ,
               "CONDLIST(EQ) POSITION(CRP)"
                             /* row not found...                      */
        if rc = 8 then
        do
                             /* ...show the last few                  */
           "TBBOTTOM &TABLE POSITION(CRP)"
           crp = crp - 6
        end
     end
                             /* add a line                            */
     if zcmd = "ADD" then
     do
        if action \= "UPDATE"
        then call StdMsg "You are not in update mode"
        else
        do
           "TBVCLEAR &TABLE"
           locn = "X"
           "TBADD" table
        end
     end
                             /*  process all selected lines           */
     do while ztdsels > 0
        slog = log
        if Tnames then
        do
           slog = log
           "TBGET" nametb
           log = slog
        end
                             /*  update only if requested             */
        if action = "UPDATE"
        then "TBPUT &TABLE"
                             /*  insert lines where necessary         */
        if lcmd = "I"   | lcmd = "R" then
        do
           if action \= "UPDATE"
           then call StdMsg "You are not in update mode"
           else
                             /* Insert lines                          */
           do
              if lcmd = "I" then
              do
                 "TBVCLEAR" table
              end
              name = "VARNAME"
              locn = "X"

                             /* Add requested number of lines         */
              if \datatype(nLines,"NUM")
              then nLines = 1

              do i = 1 to nLines
                 "TBADD" table
                 if i = 1
                 then "TBQUERY" table "POSITION(TBLROW)"
              end
           end
        end
        if lcmd = "D" then
        do
                             /* Delete lines                          */
           if locn = "X"
           then "TBDELETE" table
           else call stdmsg ,
                    "Only X type variables can be deleted",   ,
                    "Not deletable"

        end
                             /* Discard invalid variables             */
        if symbol(name) = "BAD" then
        do
           if name \= "" then
               call StdMsg "unusable name" name "changed to VARNAME"
           name = "VARNAME"
           "TBPUT &TABLE"
        end
        lcmd = ""
                             /*  get next selected line               */
        if ztdsels = 1
        then  ztdsels = 0
        else "TBDISPL &TABLE"
     end
                             /*  reposition table                     */
     if subTbRc \= 8 then
     do
        "TBTOP   &TABLE"
        "TBSKIP  &TABLE  NUMBER("crp")"
        "TBDISPL &TABLE  PANEL(&PANEL) CSRROW("tblrow")"
        SubTbRc = rc
     end
  end

  if action = "UPDATE" then
  do
                             /*  rebuild list of extension variables  */
     extnames = ""
     badlist = ""
                             /*  scan the whole table                 */
     "TBTOP   &TABLE"
     "TBSKIP  &TABLE"
     do while rc = 0
        call value name,value
        if locn = "X"
        then extnames = extnames name
        "TBSKIP &TABLE"
     end
  end
  "VPUT (NAMES  &NAMES EXTNAMES &EXTNAMES) SHARED"
 /********************************************************************/
qquit:
                             /* abandon ...                           */
  AcceptCC = 12
  if tnames then "TBEND" nametb
  exit
 /********************************************************************/
StdMsg:
  parse arg zerrlm,zerrsm,quit
  if sysenv = "FORE"
  then "ISPEXEC SETMSG MSG(ISRZ002)"
  else say date() time() zerrlm
  if quit \= "" then signal qquit
  return
 /********************************************************************/
                             /* Generalised error handling            */
Error:
                             /* Return acceptable code to the program */
  if (rc >= 0 & rc <= AcceptCC)
  then return
                             /* Or report the error and terminate     */
  eline = sourceline(sigl)
  errCond = condition("C")
  errDesc = condition("D")
                             /* get error text if applicable          */
  if rc > 0 & rc < 100
  then etext = errortext(rc)
  else etext = ""
                             /* Check error code                      */
  if rc = -3
  then etext = "A Host command was not found"
  "DISPLAY PANEL(UTPERR01)"
  signal qquit
